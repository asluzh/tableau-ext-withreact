import{j as e,t as u,r,d as E,c as h,R as m}from"./settings-C6THL_L0.js";var y={BASE_URL:"/tableau-ext-withreact/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const w=y.VITE_DEBUG;function v({dashboard:l,settings:i}){return w&&console.log("[Extension.tsx] Render on dashboard:",l),e.jsx(e.Fragment,{children:e.jsx("div",{className:"centerOnPage",children:e.jsx(u.Button,{kind:i.buttonStyle,disabled:!1,onClick:()=>{console.log("Button clicked")},children:i.buttonLabel})})})}var S={BASE_URL:"/tableau-ext-withreact/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const s=S.VITE_DEBUG;function j(){const[l,i]=r.useState({}),[c,g]=r.useState(0),[x,f]=r.useState({});r.useEffect(()=>(s&&console.log("[ExtensionWrapper.tsx] useEffect initialize"),(async()=>{await tableau.extensions.initializeAsync({configure:p}),i(tableau.extensions.dashboardContent.dashboard);const t=tableau.extensions.settings.getAll();Object.keys(t).length>0?(s&&console.log("[ExtensionWrapper.tsx] Existing settings found:",t),await new Promise(n=>setTimeout(n,1e3)),d(t)):g(1)})(),()=>{s&&console.log("[ExtensionWrapper.tsx] useEffect callback")}),[]);function d(t){try{const n={...E};s&&console.log("[ExtensionWrapper.tsx] Validating extension settings"),"metaVersion"in t&&parseInt(t.metaVersion)&&(n.metaVersion=parseInt(t.metaVersion),n.buttonLabel=t.buttonLabel,n.buttonStyle=t.buttonStyle,f(n),g(2))}catch(n){console.error("Error updating settings:",n)}}const p=()=>{s&&console.log("[ExtensionWrapper.tsx] Opening configure popup dialog window");let t="config.html";const n=tableau.extensions.environment.tableauVersion.split(".");if(parseInt(n[0],10)===2018||parseInt(n[0],10)===2019&&parseInt(n[1],10)<3){const a=window.location.href;t=window.location.href.substring(0,a.lastIndexOf("/"))+"/config.html",s&&console.log("[ExtensionWrapper.tsx] Changing popup window URL for older versions:",t)}(async()=>{const a=tableau.extensions.settings.addEventListener(tableau.TableauEventType.SettingsChanged,o=>{s&&console.log("[ExtensionWrapper.tsx] SettingsChanged event:",o),d(tableau.extensions.settings.getAll())});try{const o=await tableau.extensions.ui.displayDialogAsync(t,"",{height:650,width:500});if(s&&console.log(`[ExtensionWrapper.tsx] Returning from config window (${o})`),o&&a===void 0){s&&console.log("[ExtensionWrapper.tsx] Update settings without listener");const b=tableau.extensions.settings.getAll();d(b)}}catch(o){if(typeof o=="object"&&o!==null&&"errorCode"in o)switch(o.errorCode){case tableau.ErrorCodes.DialogClosedByUser:s&&console.log("[ExtensionWrapper.tsx] Dialog window was closed by the user");break;default:console.error("[ExtensionWrapper.tsx]",o)}}finally{s&&console.log("[ExtensionWrapper.tsx] Unregister SettingsChanged event handler"),a&&a()}})()};return e.jsxs(e.Fragment,{children:[c===0&&e.jsx("div",{"aria-busy":"true",className:"overlay",children:e.jsx("div",{className:"centerOnPage",children:e.jsx(u.Spinner,{color:"dark"})})}),c===1&&e.jsx("div",{className:"centerOnPage",children:e.jsx(u.Button,{kind:"outline",onClick:p,children:"Configure Extension"})}),c===2&&e.jsx(v,{dashboard:l,settings:x})]})}h.createRoot(document.getElementById("root")).render(e.jsx(m.StrictMode,{children:e.jsx(j,{})}));
